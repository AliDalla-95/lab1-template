name: Deploy Django Application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ secrets.DEBUG }}
      DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
      SQL_ENGINE: ${{ secrets.SQL_ENGINE }}
      SQL_DATABASE: ${{ secrets.SQL_DATABASE }}
      SQL_USER: ${{ secrets.SQL_USER }}
      SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
      SQL_HOST: ${{ secrets.SQL_HOST }}
      SQL_PORT: ${{ secrets.SQL_PORT }}
      DATABASE: ${{ secrets.DATABASE }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}
      - name: Deploy to VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd ${{ secrets.VPS_DEPLOY_PATH }}
            git pull origin master
            docker compose -f docker-compose.prod.yml down -v
            export DEBUG=${{ secrets.DEBUG }}
            export SECRET_KEY=${{ secrets.SECRET_KEY }}
            export DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }}
            export SQL_ENGINE=${{ secrets.SQL_ENGINE }}
            export SQL_DATABASE=${{ secrets.SQL_DATABASE }}
            export SQL_USER=${{ secrets.SQL_USER }}
            export SQL_PASSWORD=${{ secrets.SQL_PASSWORD }}
            export SQL_HOST=${{ secrets.SQL_HOST }}
            export SQL_PORT=${{ secrets.SQL_PORT }}
            export DATABASE=${{ secrets.DATABASE }}
            export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            export POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            docker compose -f docker-compose.prod.yml up -d --build
          EOF