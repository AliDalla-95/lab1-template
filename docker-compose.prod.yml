services:
  web:
    build:
      context: .
      dockerfile: ./Dockerfile.prod
    command: gunicorn person_api.wsgi:application --bind 0.0.0.0:8000
    expose:
      - 8000
    environment:
      - DEBUG=$env:DEBUG
      - SECRET_KEY=$env:SECRET_KEY
      - DJANGO_ALLOWED_HOSTS=$env:DJANGO_ALLOWED_HOSTS
      - SQL_ENGINE=$env:SQL_ENGINE
      - SQL_DATABASE=$env:SQL_DATABASE
      - SQL_USER=$env:SQL_USER
      - SQL_PASSWORD=$env:SQL_PASSWORD
      - SQL_HOST=$env:SQL_HOST
      - SQL_PORT=$env:SQL_PORT
      - DATABASE=$env:DATABASE
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    depends_on:
      - db
  db:
    image: postgres:17
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=$env:POSTGRES_USER
      - POSTGRES_PASSWORD=$env:POSTGRES_PASSWORD
      - POSTGRES_DB=$env:POSTGRES_D
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - 5000:80
    depends_on:
      - web
volumes:
  postgres_data:
  static_volume:
  media_volume:

